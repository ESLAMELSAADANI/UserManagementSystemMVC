@model User
@{
    ViewData["Title"] = "Edit User";
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-header bg-primary text-white text-center fw-bold fs-4">
                    <i class="bi bi-pencil-square"></i> Edit User – <span class="text-light">@Model.UserName</span>
                </div>

                <div class="card-body p-4">
                    <form asp-action="Edit" method="post" novalidate>
                        <input type="hidden" asp-for="Id" />

                        <!-- Username -->
                        <div class="mb-3">
                            <label asp-for="UserName" class="form-label fw-semibold">
                                <i class="bi bi-person"></i> User Name
                            </label>
                            <input asp-for="UserName" class="form-control" placeholder="Enter user name" />
                            <span asp-validation-for="UserName" class="text-danger small"></span>
                        </div>

                        <!-- Email -->
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label fw-semibold">
                                <i class="bi bi-envelope"></i> Email
                            </label>
                            <input asp-for="Email" class="form-control" placeholder="example@email.com" />
                            <span asp-validation-for="Email" class="text-danger small"></span>
                        </div>

                        <!-- Age -->
                        <div class="mb-3">
                            <label asp-for="Age" class="form-label fw-semibold">
                                <i class="bi bi-calendar"></i> Age
                            </label>
                            <input asp-for="Age" class="form-control" placeholder="Enter age" />
                            <span asp-validation-for="Age" class="text-danger small"></span>
                        </div>

                        <!-- New Password with Eye Icon + Strength Bar -->
                        <div class="mb-3 position-relative">
                            <label asp-for="HashPassword" class="form-label fw-semibold">
                                <i class="bi bi-lock"></i> New Password
                            </label>
                            <div class="input-group">
                                <input asp-for="HashPassword" type="password" class="form-control" id="passwordField" placeholder="Enter new password" />
                                <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>

                            <!-- Strength Progress Bar -->
                            <div class="progress mt-2" style="height: 8px;">
                                <div id="passwordStrengthBar" class="progress-bar bg-danger" style="width: 0%; transition: width 0.4s ease;"></div>
                            </div>
                            <small id="passwordStrengthLabel" class="fw-semibold small text-muted"></small>

                            <span asp-validation-for="HashPassword" class="text-danger small"></span>
                        </div>

                        <!-- Confirm Password -->
                        <div class="mb-4 position-relative">
                            <label asp-for="ConfirmPassword" class="form-label fw-semibold">
                                <i class="bi bi-lock-fill"></i> Confirm Password
                            </label>
                            <div class="input-group">
                                <input asp-for="ConfirmPassword" type="password" class="form-control" id="confirmPasswordField" placeholder="Re-enter new password" />
                                <button type="button" class="btn btn-outline-secondary" id="toggleConfirmPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                        </div>

                        <!-- Buttons -->
                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-outline-secondary px-4">
                                <i class="bi bi-arrow-left"></i> Back
                            </a>
                            <button type="submit" class="btn btn-primary px-4 shadow-sm">
                                <i class="bi bi-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

    <script>
        const passwordField = document.getElementById("passwordField");
        const confirmPasswordField = document.getElementById("confirmPasswordField");
        const togglePassword = document.getElementById("togglePassword");
        const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");
        const strengthBar = document.getElementById("passwordStrengthBar");
        const strengthLabel = document.getElementById("passwordStrengthLabel");

        // Toggle password visibility
        function toggleVisibility(field, button) {
            const type = field.type === "password" ? "text" : "password";
            field.type = type;
            button.innerHTML = type === "password"
                ? '<i class="bi bi-eye"></i>'
                : '<i class="bi bi-eye-slash"></i>';
        }

        togglePassword.addEventListener("click", () => toggleVisibility(passwordField, togglePassword));
        toggleConfirmPassword.addEventListener("click", () => toggleVisibility(confirmPasswordField, toggleConfirmPassword));

        // Password strength logic
        passwordField.addEventListener("input", () => {
            const password = passwordField.value;
            let score = 0;

            if (password.length >= 8) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[a-z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^A-Za-z0-9]/.test(password)) score++;

            let strength = { width: "0%", color: "bg-danger", label: "" };

            switch (score) {
                case 0:
                    strength = { width: "0%", color: "bg-danger", label: "" };
                    break;
                case 1:
                case 2:
                    strength = { width: "40%", color: "bg-danger", label: "Weak" };
                    break;
                case 3:
                    strength = { width: "70%", color: "bg-warning", label: "Medium" };
                    break;
                case 4:
                case 5:
                    strength = { width: "100%", color: "bg-success", label: "Strong" };
                    break;
            }

            strengthBar.style.width = strength.width;
            strengthBar.className = `progress-bar ${strength.color}`;
            strengthLabel.textContent = strength.label;
            strengthLabel.style.color =
                strength.color === "bg-warning" ? "orange" :
                    strength.color === "bg-success" ? "green" : "red";
        });
    </script>
}
